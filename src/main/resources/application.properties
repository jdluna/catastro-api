# Quarkus configuration
quarkus.application.name=catastro-api

# Database configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:catastro_db}
quarkus.datasource.username=${DB_USER:postgres}
quarkus.datasource.password=${DB_PASSWORD:postgres}

# Connection pool optimization for Lambda
quarkus.datasource.jdbc.max-size=2
quarkus.datasource.jdbc.min-size=0
quarkus.datasource.jdbc.initial-size=0
quarkus.datasource.jdbc.acquisition-timeout=5

# Flyway migrations
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true

# Lambda optimization
quarkus.lambda.enable-pooling-context-cache=true
quarkus.lambda.handler=io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler

# AWS Configuration
quarkus.s3.aws.region=${AWS_REGION:us-east-1}
quarkus.s3.aws.credentials.type=default

# CORS Configuration
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=Content-Type,Authorization

# Logging
quarkus.log.level=INFO
quarkus.log.category."com.municipalidad.catastro".level=DEBUG
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

# Build optimization
quarkus.package.type=uber-jar
